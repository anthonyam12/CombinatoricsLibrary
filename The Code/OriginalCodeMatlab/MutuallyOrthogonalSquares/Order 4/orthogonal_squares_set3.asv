%This script finds sets of 3 squares that are mutually othogonal
%It will only use the squares that belonged to a set of two. 

fid = fopen('mutually_orthogonal_squaresO4.dat');

pairs = zeros(1,2, 0);

while ~feof(fid)
   a = fscanf(fid, '%u %u',[1 2]);
   pairs = cat(3, pairs, a);
end

fclose(fid);

%get squares used in the pairs
indexes = getIndexes(pairs);
[q,w,e] = size(pairs);
[r] = size(indexes);
triples = zeros (1,3,0);

fid = fopen('reduced_order4.dat');
reduced_squares = zeros(4,4,0);

while ~feof(fid)
    A = fscanf(fid, '%u', [4 4]);
    reduced_squares = cat(3, reduced_squares, A);
end

for i=1:e
    currentSquareOne = reduced_squares (:, :, pairs(1,1,i));
    currentSquareTwo = reduced_squares (:, :, pairs(1,2,i));
    for j=1:r
        checkSquare = reduced_squares(:, :, indexes(j));
        [p,o,u] = size(triples);
        if (check_latin_square(currentSquareOne, checkSquare) && ...
            check_latin_square(currentSquareTwo, checkSquare))
            triple = [pairs(1,1,i) pairs(1,2,i) k 
            for k=1:u
               %if == 3 all same squares
               if (intersect((triples(:,:,k),   
            end
        end
    end
end